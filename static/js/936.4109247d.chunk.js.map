{"version":3,"file":"static/js/936.4109247d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__w+u63\",\"link\":\"Home_link__2zIq5\"};","import { useState, useEffect } from 'react'\nimport { requestTrendingMovies } from 'services/api';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { nanoid } from 'nanoid';\n\nimport css from './Home.module.css';\n\nconst Home = () => {\n    const [movies, setMovies] = useState({});\n    const location = useLocation();\n    const [isLoadMore, setIsLoadMore] = useState(false);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setIsLoadMore(true);\n                const resp = await requestTrendingMovies();\n                setMovies(resp.data.results);\n            }\n            catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n            finally {\n                setIsLoadMore(false);\n            }\n          };\n        fetchMovies();\n    },[])\n\n    return (\n        <div className={css.container}>\n            <h1>Trending today</h1>\n            {isLoadMore && <Loader />}\n            {!isLoadMore && (\n                <ul>\n                {Array.isArray(movies) && movies.map(movie => {\n                    return (\n                        <li key={nanoid()}>\n                            <Link className={css.link} state={{from: location}} to={`/movies/${movie.id}`}>\n                                <span className={css.linkText}>{movie.title || movie.name}</span>\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            )}\n        </div>\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '9d853ff80d6bad3956ee1b02dd688b86';\nconst url = 'https://api.themoviedb.org/3/';\nexport const AUTH_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ZDg1M2ZmODBkNmJhZDM5NTZlZTFiMDJkZDY4OGI4NiIsInN1YiI6IjY1YzI5YWIwOGUyZTAwMDE4M2E0ZWUxMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hazNQV9NpBZxh2Yqr24KXmtM3BG02PDT4G2-CtofMcU';\n\nexport const requestTrendingMovies = async () => {\n  const options = {\n    method: 'GET',\n    url: `${url}/trending/movie/day`,\n    params: { language: 'en-US', api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n  };\n\nexport const requestMovieById = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `${url}/movie/${id}`,\n    params: { language: 'en-US', api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n}\n\nexport const requestMovieCast = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `${url}/movie/${id}/credits`,\n    params: { language: 'en-US', api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n}\n\nexport const requestMovieReviews = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `${url}/movie/${id}/reviews`,\n    params: { language: 'en-US', page: 1, api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n}","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","_useState3","_useState4","isLoadMore","setIsLoadMore","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","requestTrendingMovies","sent","data","results","t0","console","error","finish","stop","apply","arguments","_jsxs","className","css","children","_jsx","Loader","Array","isArray","map","movie","Link","state","from","to","concat","id","title","name","nanoid","API_KEY","url","AUTH_KEY","options","method","params","language","api_key","headers","accept","Authorization","axios","abrupt","requestMovieById","_ref2","_callee2","_context2","_x","requestMovieCast","_ref3","_callee3","_context3","_x2","requestMovieReviews","_ref4","_callee4","_context4","page","_x3","urlAlphabet","size","length","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}