{"version":3,"file":"static/js/936.6b5a6ab1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__w+u63\",\"link\":\"Home_link__2zIq5\"};","import { useState, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { requestTrendingMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { nanoid } from 'nanoid';\nimport css from './Home.module.css';\n\nconst Home = () => {\n    const [movies, setMovies] = useState({});\n    const location = useLocation();\n    const [error, setError] = useState(null);\n    const [isLoadMore, setIsLoadMore] = useState(false);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setIsLoadMore(true);\n                const resp = await requestTrendingMovies();\n                setMovies(resp.data.results);\n            }\n            catch (error) {\n                setError(error);\n            }\n            finally {\n                setIsLoadMore(false);\n            }\n          };\n        fetchMovies();\n    },[])\n\n    return (\n        <div className={css.container}>\n            <h1>Trending today</h1>\n            {isLoadMore && <Loader />}\n            {error && <p>Something went wrong...</p>}\n            {!isLoadMore && (\n                <ul>\n                {Array.isArray(movies) && movies.map(({ id, title, name }) => {\n                    return (\n                        <li key={nanoid()}>\n                            <Link className={css.link} state={{from: location}} to={`/movies/${id}`}>\n                                <span className={css.linkText}>{title || name}</span>\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            )}\n        </div>\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '9d853ff80d6bad3956ee1b02dd688b86';\nconst url = 'https://api.themoviedb.org/3/';\nexport const AUTH_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ZDg1M2ZmODBkNmJhZDM5NTZlZTFiMDJkZDY4OGI4NiIsInN1YiI6IjY1YzI5YWIwOGUyZTAwMDE4M2E0ZWUxMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hazNQV9NpBZxh2Yqr24KXmtM3BG02PDT4G2-CtofMcU';\n\nexport const requestTrendingMovies = async () => {\n  const options = {\n    method: 'GET',\n    url: `${url}/trending/movie/day`,\n    params: { language: 'en-US', api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n  };\n\nexport const requestMovieById = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `${url}/movie/${id}`,\n    params: { language: 'en-US', api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n}\n\nexport const requestMovieCast = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `${url}/movie/${id}/credits`,\n    params: { language: 'en-US', api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n}\n\nexport const requestMovieReviews = async (id) => {\n  const options = {\n    method: 'GET',\n    url: `${url}/movie/${id}/reviews`,\n    params: { language: 'en-US', page: 1, api_key: API_KEY },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const data = await axios(options);\n  return data;\n}","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","_useState3","_useState4","error","setError","_useState5","_useState6","isLoadMore","setIsLoadMore","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","requestTrendingMovies","sent","data","results","t0","finish","stop","apply","arguments","_jsxs","className","css","children","_jsx","Loader","Array","isArray","map","_ref2","id","title","name","Link","state","from","to","concat","nanoid","API_KEY","url","AUTH_KEY","options","method","params","language","api_key","headers","accept","Authorization","axios","abrupt","requestMovieById","_callee2","_context2","_x","requestMovieCast","_ref3","_callee3","_context3","_x2","requestMovieReviews","_ref4","_callee4","_context4","page","_x3","urlAlphabet","size","length","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}