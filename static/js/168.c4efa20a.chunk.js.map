{"version":3,"file":"static/js/168.c4efa20a.chunk.js","mappings":"wQACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAiF,sBAAjF,EAA8G,sB,SCoD9G,EA9CgB,WAEZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAoCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAuBhC,OArBAG,EAAAA,EAAAA,YAAU,WACN,GAAKhB,EAAL,CAEA,IAAMiB,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFDF,EAAAC,KAAA,EAEnBT,GAAc,GAAMQ,EAAAE,KAAA,GAEDC,EAAAA,EAAAA,IAAoB1B,GAAS,KAAD,EAAzCsB,EAAIC,EAAAI,KACVpB,EAAWe,EAAKM,KAAKC,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAG9BZ,EAAQY,EAAAO,IAAQ,QAGK,OAHLP,EAAAC,KAAA,GAGhBT,GAAc,GAAOQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAE5B,kBAbuB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAexBjB,GAjBoB,CAkBxB,GAAE,CAACjB,KAGCmC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKtB,IAAcuB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACrB5B,IAAS2B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6BACbC,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAASJ,SACP,OAAZ9B,IAA2B,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASmC,QAAS,EAAInC,EAAQoC,KAAI,SAAAC,GAAyB,IAAtBC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAC1D,OACIV,EAAAA,EAAAA,MAAA,MAAmBI,UAAWC,EAASJ,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAASJ,SAAEQ,KAC1BP,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAASJ,SAAES,OAFpBC,EAAAA,EAAAA,MAKjB,KAAMT,EAAAA,EAAAA,KAAA,OAAAD,SAAK,kDAI/B,C,uDCnDO,IAAMW,EACX,mECmBSD,EAAS,WAGlB,IAHiC,IAAdE,EAAId,UAAAO,OAAA,QAAAQ,IAAAf,UAAA,GAAAA,UAAA,GAAG,GACtBgB,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWN,IAC3CA,KACLE,GAAMH,EAA0B,GAAdI,EAAMH,IAE1B,OAAOE,CACT,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"name\":\"Reviews_name__kx3f+\",\"text\":\"Reviews_text__EqLvx\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMovieReviews } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { nanoid } from 'nanoid';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoadMore, setIsLoadMore] = useState(false);\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        const fetchMoviesReviews = async () => {\n            try {\n                setIsLoadMore(true);\n\n                const resp = await requestMovieReviews(movieId);\n                setReviews(resp.data.results);\n            }\n            catch (error) {\n                setError(error);\n            }\n            finally {\n                setIsLoadMore(false);\n            }\n        };\n        \n        fetchMoviesReviews();\n    },[movieId])\n\n    return (\n        <div>\n            {isLoadMore && <Loader />}\n            {error && <p>Something went wrong...</p>}\n            <ul className={css.list}>\n                {reviews !== null && reviews?.length > 0? (reviews.map(({ author, content}) => {\n                        return (\n                            <li key={nanoid()} className={css.item}>\n                                <h3 className={css.name}>{author}</h3>\n                                <p className={css.text}>{content}</p>\n                            </li>\n                        )\n                    })) : <div>We don't have any reviews for this movie.</div>}\n            </ul>\n        </div>\n    )\n}\n\nexport default Reviews;","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","_useState5","_useState6","isLoadMore","setIsLoadMore","useEffect","fetchMoviesReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","requestMovieReviews","sent","data","results","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","className","css","length","map","_ref2","author","content","nanoid","urlAlphabet","size","undefined","id","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}